/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import Controlador.Sistema;
import Dominio.Cliente;
import Dominio.Deposito;
import Dominio.Empleado;
import java.awt.Color;
import java.awt.Component;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import java.util.Set;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION;

public class RegistroContrato extends javax.swing.JFrame implements Observer {

    private HashMap<String, Empleado> empleados;
    private HashMap<String, Cliente> clientes;
    private HashMap<Integer, Deposito> depositos;
    private Sistema sistema;
    
    
  
    public RegistroContrato(Sistema sistema) {
        this.sistema = sistema;
        this.empleados = sistema.getEmpleados();
        this.clientes = sistema.getClientes();
        this.depositos = sistema.getDepositos();
        initComponents();
        cargarListas();
    }

    @Override
    public void update(Observable o, Object arg) {
        System.out.println(arg);
        String opcion = (String) arg;
        if (opcion.equals("empleado")) {
            empleados = sistema.getEmpleados();
        } else if (opcion.equals("deposito")) {
            depositos = sistema.getDepositos();
        } else if (opcion.equals("cliente")) {
            clientes = sistema.getClientes();
        }
        cargarListas();
    }

    public void cargarListas() {
        //LISTA EMPLEADOS
        DefaultListModel modeloDeListaEmpl = new DefaultListModel();
        modeloDeListaEmpl.addAll(this.empleados.values());
        this.listEmpleados.setModel(modeloDeListaEmpl);
        this.Empleados.repaint();
        //LISTA CLIENTES
        DefaultListModel modeloDeListaClie = new DefaultListModel();
        modeloDeListaClie.addAll(this.clientes.values());
        this.listClientes.setModel(modeloDeListaClie);
    }

    private void cargarDepositos(int tamMinimo, int tamMaximo, boolean noRelevanteEstan, boolean noRelevanteRefri, boolean conEstan, boolean conRefri) {
        
        Collection<Deposito> coleccionDeDepositos = this.depositos.values();
        Iterator it = coleccionDeDepositos.iterator();
        //LISTA DEPOSITOS
        DefaultListModel modeloDeListaDepo = new DefaultListModel();
        this.listaDepositos.setCellRenderer(new RenderCeldasDepositos());
        while (it.hasNext()) {
            boolean loAgrego = true;
            Deposito miDep = (Deposito) it.next();
            if (miDep.getTamaño() >= tamMinimo && miDep.getTamaño() <= tamMaximo && miDep.isAlquilado()==false) {
                if (!noRelevanteEstan) {
                    //ME PIDEN CON ESTANTES
                    if (miDep.esEstante() != conEstan) {
                        loAgrego = false;
                    }
                }
                if (!noRelevanteRefri) {
                    // ME PIDEN CON REFRIGERACION
                    if (miDep.esRefrigerado() != conRefri) {
                        loAgrego = false;
                    }
                }
            } else {
                loAgrego = false;
            }

            if (loAgrego) {
                modeloDeListaDepo.addElement(miDep);
            }

        }
        this.listaDepositos.setModel(modeloDeListaDepo);
        
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoEstantes = new javax.swing.ButtonGroup();
        grupoRefrigeracion = new javax.swing.ButtonGroup();
        Clientes = new javax.swing.JScrollPane();
        listClientes = new javax.swing.JList();
        panelCaracteristicas = new javax.swing.JPanel();
        lblCaractDep = new javax.swing.JLabel();
        lblTamaño = new javax.swing.JLabel();
        lblEstantes = new javax.swing.JLabel();
        lblRefrigeracion = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtMin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMax = new javax.swing.JTextField();
        pnlEstantes = new javax.swing.JPanel();
        rbENo = new javax.swing.JRadioButton();
        rbESi = new javax.swing.JRadioButton();
        rbENR = new javax.swing.JRadioButton();
        rbRNR = new javax.swing.JRadioButton();
        rbRNo = new javax.swing.JRadioButton();
        rbRSi = new javax.swing.JRadioButton();
        lblMensaje1 = new javax.swing.JLabel();
        lblMensaje2 = new javax.swing.JLabel();
        panelAcciones = new javax.swing.JPanel();
        btnLimpiarCapmos = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnReservar = new javax.swing.JButton();
        paneldepositos = new javax.swing.JScrollPane();
        listaDepositos = new javax.swing.JList();
        subtitulos = new javax.swing.JPanel();
        labelEmpleados = new javax.swing.JLabel();
        labelClientes = new javax.swing.JLabel();
        lblDepositosDisp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Empleados = new javax.swing.JScrollPane();
        listEmpleados = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de contrato");
        getContentPane().setLayout(null);

        listClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Clientes.setViewportView(listClientes);

        getContentPane().add(Clientes);
        Clientes.setBounds(170, 130, 180, 240);

        panelCaracteristicas.setLayout(null);

        lblCaractDep.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCaractDep.setText("Caracteristicas del deposito");
        panelCaracteristicas.add(lblCaractDep);
        lblCaractDep.setBounds(107, 0, 250, 25);

        lblTamaño.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblTamaño.setText("Tamaño");
        panelCaracteristicas.add(lblTamaño);
        lblTamaño.setBounds(30, 40, 57, 22);

        lblEstantes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblEstantes.setText("Estantes");
        panelCaracteristicas.add(lblEstantes);
        lblEstantes.setBounds(150, 40, 57, 22);

        lblRefrigeracion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblRefrigeracion.setText("Refrigeración");
        panelCaracteristicas.add(lblRefrigeracion);
        lblRefrigeracion.setBounds(290, 40, 113, 22);

        jPanel1.setLayout(new java.awt.GridLayout(2, 2, -30, 20));

        jLabel6.setText("Mínimo");
        jPanel1.add(jLabel6);

        txtMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinActionPerformed(evt);
            }
        });
        jPanel1.add(txtMin);

        jLabel7.setText("Máximo");
        jPanel1.add(jLabel7);
        jPanel1.add(txtMax);

        panelCaracteristicas.add(jPanel1);
        jPanel1.setBounds(10, 80, 120, 80);

        pnlEstantes.setLayout(new java.awt.GridLayout(3, 0));

        grupoEstantes.add(rbENo);
        rbENo.setText("No");
        rbENo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbENoActionPerformed(evt);
            }
        });
        pnlEstantes.add(rbENo);

        grupoEstantes.add(rbESi);
        rbESi.setText("Si");
        pnlEstantes.add(rbESi);

        grupoEstantes.add(rbENR);
        rbENR.setSelected(true);
        rbENR.setText("No relevante");
        pnlEstantes.add(rbENR);

        panelCaracteristicas.add(pnlEstantes);
        pnlEstantes.setBounds(150, 70, 100, 100);

        grupoRefrigeracion.add(rbRNR);
        rbRNR.setSelected(true);
        rbRNR.setText("No relevante");
        panelCaracteristicas.add(rbRNR);
        rbRNR.setBounds(290, 140, 140, 20);

        grupoRefrigeracion.add(rbRNo);
        rbRNo.setText("No");
        panelCaracteristicas.add(rbRNo);
        rbRNo.setBounds(290, 110, 60, 20);

        grupoRefrigeracion.add(rbRSi);
        rbRSi.setText("Si");
        panelCaracteristicas.add(rbRSi);
        rbRSi.setBounds(290, 80, 40, 20);

        getContentPane().add(panelCaracteristicas);
        panelCaracteristicas.setBounds(20, 400, 460, 190);

        lblMensaje1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMensaje1.setText("Seleccione un empleado, el cliente y las caracteristicas deseadas de los depositos que busca.");
        getContentPane().add(lblMensaje1);
        lblMensaje1.setBounds(60, 10, 790, 30);

        lblMensaje2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(lblMensaje2);
        lblMensaje2.setBounds(220, 40, 410, 40);

        panelAcciones.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnLimpiarCapmos.setText("Limpiar campos");
        btnLimpiarCapmos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCapmosActionPerformed(evt);
            }
        });
        panelAcciones.add(btnLimpiarCapmos);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnBuscar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnCancelar);

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnReservar);

        getContentPane().add(panelAcciones);
        panelAcciones.setBounds(530, 470, 290, 90);

        listaDepositos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        paneldepositos.setViewportView(listaDepositos);

        getContentPane().add(paneldepositos);
        paneldepositos.setBounds(350, 130, 300, 240);

        subtitulos.setLayout(null);

        labelEmpleados.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelEmpleados.setText("Empleados");
        subtitulos.add(labelEmpleados);
        labelEmpleados.setBounds(10, 0, 110, 40);

        labelClientes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelClientes.setText("Clientes");
        subtitulos.add(labelClientes);
        labelClientes.setBounds(170, 0, 90, 40);

        lblDepositosDisp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDepositosDisp.setText("Depositos disponibles");
        subtitulos.add(lblDepositosDisp);
        lblDepositosDisp.setBounds(380, 0, 190, 40);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Detalles");
        subtitulos.add(jLabel1);
        jLabel1.setBounds(690, 0, 70, 40);

        getContentPane().add(subtitulos);
        subtitulos.setBounds(30, 90, 810, 40);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(30, 383, 810, 10);

        listEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Empleados.setViewportView(listEmpleados);

        getContentPane().add(Empleados);
        Empleados.setBounds(30, 130, 140, 240);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(660, 130, 200, 240);

        setSize(new java.awt.Dimension(885, 613));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarCapmosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCapmosActionPerformed
        txtMin.setText("");
        txtMax.setText("");
        rbENR.setSelected(true);
        rbRNR.setSelected(true);
        lblMensaje1.setText("Seleccione un empleado, el cliente y las caracteristicas deseadas de los depositos que busca.");
        lblMensaje2.setText("");
        

    }//GEN-LAST:event_btnLimpiarCapmosActionPerformed
     
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
        lblMensaje1.setText("Seleccione un empleado, el cliente y las caracteristicas deseadas de los depositos que busca.");
        lblMensaje2.setText("");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
       
        
        int tamMinimo = Integer.parseInt(this.txtMin.getText());
        int tamMax = Integer.parseInt(this.txtMax.getText());
        boolean noRelevanteEstan = this.rbENR.isSelected();
        boolean noRelevanteRefri = this.rbRNR.isSelected();

        boolean conEstan = this.rbESi.isSelected();
        boolean conRefri = this.rbRSi.isSelected();

        cargarDepositos(tamMinimo, tamMax, noRelevanteEstan, noRelevanteRefri, conEstan, conRefri);
        lblMensaje1.setText("");
        lblMensaje2.setText("Seleccione los depositos que desea reservar.");
       
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinActionPerformed
        
    }//GEN-LAST:event_txtMinActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        
        lblMensaje1.setText("Seleccione un empleado, el cliente y las caracteristicas deseadas de los depositos que busca.");
        lblMensaje2.setText("");
    }//GEN-LAST:event_btnReservarActionPerformed

    private void rbENoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbENoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbENoActionPerformed

//    private void seleccionMultiple () {
//        listaDepositos.setSelectionMode(MULTIPLE_INTERVAL_SELECTION);
//       
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Clientes;
    private javax.swing.JScrollPane Empleados;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpiarCapmos;
    private javax.swing.JButton btnReservar;
    private javax.swing.ButtonGroup grupoEstantes;
    private javax.swing.ButtonGroup grupoRefrigeracion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelClientes;
    private javax.swing.JLabel labelEmpleados;
    private javax.swing.JLabel lblCaractDep;
    private javax.swing.JLabel lblDepositosDisp;
    private javax.swing.JLabel lblEstantes;
    private javax.swing.JLabel lblMensaje1;
    private javax.swing.JLabel lblMensaje2;
    private javax.swing.JLabel lblRefrigeracion;
    private javax.swing.JLabel lblTamaño;
    private javax.swing.JList listClientes;
    private javax.swing.JList<String> listEmpleados;
    private javax.swing.JList listaDepositos;
    private javax.swing.JPanel panelAcciones;
    private javax.swing.JPanel panelCaracteristicas;
    private javax.swing.JScrollPane paneldepositos;
    private javax.swing.JPanel pnlEstantes;
    private javax.swing.JRadioButton rbENR;
    private javax.swing.JRadioButton rbENo;
    private javax.swing.JRadioButton rbESi;
    private javax.swing.JRadioButton rbRNR;
    private javax.swing.JRadioButton rbRNo;
    private javax.swing.JRadioButton rbRSi;
    private javax.swing.JPanel subtitulos;
    private javax.swing.JTextField txtMax;
    private javax.swing.JTextField txtMin;
    // End of variables declaration//GEN-END:variables

}

class RenderCeldasDepositos extends DefaultListCellRenderer {

    @Override
    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        Component miCelda = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        Deposito dep = (Deposito) value;
        if (dep.esEstante() && dep.esRefrigerado()) {
            miCelda.setBackground(Color.GREEN);
        } else if (dep.esEstante() && !dep.esRefrigerado()) {
            miCelda.setBackground(Color.ORANGE);
        } else if (!dep.esEstante() && dep.esRefrigerado()) {
            miCelda.setBackground(Color.YELLOW);
        } else if (!dep.esEstante() && !dep.esRefrigerado()) {
            miCelda.setBackground(Color.CYAN);
        }
        return miCelda;
    }
    
  
    
    
}
